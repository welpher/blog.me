import{_ as s,c as i,I as n,w as r,m as e,a as t,U as o,E as p,o as l}from"./chunks/framework.I0qYP7JU.js";const T=JSON.parse('{"title":"javascript动画剖析","description":"","frontmatter":{"title":"javascript动画剖析","tags":["animate","easyAnim","JavaScript"],"id":789,"author":"welpher.yu","categories":["web前端"],"date":"2012-07-03T10:46:54.000Z"},"headers":[],"relativePath":"posts/2012/789.md","filePath":"posts/2012/789.md"}'),c={name:"posts/2012/789.md"},u=e("p",null,[t("最近将去年写过的"),e("a",{href:"http://stylechen.com/easyanim.html",target:"_blank",rel:"noreferrer"},"easyAnim"),t("进行了重构和优化以整合到我的javascript框架中，回过头来发现以前写的代码确实还有很多可以改进的地方，这也证明自己还是有点进步的。趁有点时间，将javascript动画运行的机制和实现的思路整理了一下，算是做个小总结，也希望对有兴趣的人有点帮助。篇幅稍长，看之前请自备瓜子啤酒。")],-1),h=e("p",null,"当然这里说的javascript动画是指利用javascript来计算DOM元素的CSS属性值来实现的动画，HTML5和CSS3的发展让WEB中的动画有了更多的可能，但这些看起来比较高级的东西还需要浏览器给力点才行。",-1),f=e("h5",{id:"解析css属性值",tabindex:"-1"},[t("解析CSS属性值 "),e("a",{class:"header-anchor",href:"#解析css属性值","aria-label":'Permalink to "解析CSS属性值"'},"​")],-1),d=e("p",null,"理论上，只要CSS的属性值包含了数值，就可以进行动画，事实上，包含了数值的CSS属性值有很多很多，拿最常见的属性来说：",-1),m=e("pre",{class:"brush: css;"},"div{ left:100px; }",-1),_=e("p",null,"上面的位置值就包含了数值“100”，要想实现该元素从100px的位置到600px的位置，只要不断的修改该元素的位置值，达到一定的速度就实现了动画，据国外的统计，每25毫秒切换一次画面，就可以实现“动”的效果。",-1),v=e("p",null,"CSS属性值都是字符串，为了方便进行计算，需先将字符串转换成数值，并且很多属性值都包含了单位，所以最好解析成下面这种格式：",-1),g=e("p",null,"100px是元素开始动画的位置，300px是元素结束动画时的位置，同样的方法解析结束的位置值：",-1),S=o("",34);function b(x,w,j,q,y,k){const a=p("font");return l(),i("div",null,[u,h,f,d,m,_,v,n(a,{color:"#0000ff"},{default:r(()=>[t("`'100px'` `==> { val : 100, unit : ``'px'` `}`")]),_:1}),g,n(a,{color:"#0000ff"},{default:r(()=>[t("`'300px'` `==> { val : 600, unit : ``'px'` `}`")]),_:1}),S])}const Q=s(c,[["render",b]]);export{T as __pageData,Q as default};
