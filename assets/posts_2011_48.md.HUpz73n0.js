import{_ as s,c as i,o as a,U as t}from"./chunks/framework.I0qYP7JU.js";const E=JSON.parse('{"title":"wordpress“阅读更多”链接的自定义方法","description":"","frontmatter":{"title":"wordpress“阅读更多”链接的自定义方法","tags":["wordpress"],"id":48,"author":"welpher.yu","categories":["blog"],"date":"2011-08-20T00:50:40.000Z"},"headers":[],"relativePath":"posts/2011/48.md","filePath":"posts/2011/48.md"}'),e={name:"posts/2011/48.md"},n=t(`<p>wordpress中用模版标签：the_content来显示文章内容。如果文章中用more标签来截取内容，这个标签自动生成一个链接，用来查看完整的文章。</p><p>虽然这个方法已经很好了，但是也不是非常的完美，它会自动生成一个锚点（如：#more-13）,虽然设定为从未读的地方开始阅读，但是这个可以自己设定么？搜了半天，除了the_content这个方法说明外，未发现其它方法。</p><p>于是，我就想了，莫非要改wordpress的源代码？如果真要改还真是比较麻烦，因为我对这个还真不在行。</p><p>后来变换了搜索关键词，在谷歌大神的帮助下，发现了<a href="http://domety.com/archives/220/" title="Domety" target="_blank" rel="noreferrer">Domety</a>的这篇文章，其实不用改神马源码，直接加一个过滤函数在当前主题的functions.php里面就行了。原来 这么简单呀，看代码吧：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remove_more_jump_link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($link){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> preg_replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">#more-</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/i&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,$link);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add_filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;the_content_more_link&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;remove_more_jump_link&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?&gt;</span></span></code></pre></div>`,5),p=[n];function h(l,k,r,o,d,c){return a(),i("div",null,p)}const g=s(e,[["render",h]]);export{E as __pageData,g as default};
