import{_ as a,c as e,o as i,U as t,aq as s,ar as r,as as l,at as p,au as n}from"./chunks/framework.I0qYP7JU.js";const w=JSON.parse('{"title":"前端自动化开发工具","description":"","frontmatter":{"title":"前端自动化开发工具","tags":["gruntjs"],"id":1053,"author":"welpher.yu","categories":["web前端"],"date":"2014-06-17T16:16:00.000Z"},"headers":[],"relativePath":"posts/2014/1053.md","filePath":"posts/2014/1053.md"}'),o={name:"posts/2014/1053.md"},h=t('<h5 id="为什么要用自动化开发工具" tabindex="-1">为什么要用自动化开发工具 <a class="header-anchor" href="#为什么要用自动化开发工具" aria-label="Permalink to &quot;为什么要用自动化开发工具&quot;">​</a></h5><p>在前端的开发中上线前可能会做的事情：</p><blockquote><p>文件目录调整</p><p>HTML注释、换行等操作</p><p>CSS压缩合并</p><p>JS、CSS语法检测</p><p>JS代码压缩</p><p>图片压缩</p></blockquote><p>上面列举了一些常用的操作，这些操作是重复而枯燥的，如果是人工来一项一项做，会浪费大量时间。所以需要有一个高效的工具来帮我们做这些事情，Grunt应运而生。</p><h5 id="grunt是什么" tabindex="-1">Grunt是什么 <a class="header-anchor" href="#grunt是什么" aria-label="Permalink to &quot;Grunt是什么&quot;">​</a></h5><p>Grunt是一个基于任务的Javascript工程命令行构建工具</p><h5 id="如何使用grunt" tabindex="-1">如何使用Grunt <a class="header-anchor" href="#如何使用grunt" aria-label="Permalink to &quot;如何使用Grunt&quot;">​</a></h5><ul><li><p><a href="http://nodejs.org/download/" target="_blank" rel="noreferrer">安装nodejs</a></p></li><li><p>安装gruntjs</p></li><li><p>假如之前安装过的话，先卸载 npm uninstall –g –grunt</p></li><li><p>安装grunt命令行工具， 命令：npm install-g grunt-cli</p></li><li><p>在工程目录下安装Grunt Module(如何安装看第三步)</p></li><li><p>安装Grunt Module</p><ol><li><p>在项目根目录下创建package.json文件</p><p><img src="'+s+'" alt="1"></p></li><li><p>在项目根目录执行以下命令行自动安装package包文件：npm install</p></li><li><p>增加依赖的模块，可以在根目录下执行命令行 Npm install –save-dev //–save-dev 是把信息保存到package.json</p></li><li><p><a href="http://gruntjs.com/plugins" target="_blank" rel="noreferrer">常用的模块</a></p></li><li><p>为了方便，将依赖的包都写入到package.json中，执行第2操作即可安装</p></li></ol></li><li><p>在项目的根目录创建Gruntfile.js文件，在此文件中注册要执行的任务，如下图代码示例</p><p><img src="'+r+'" alt="2"></p><p>代码中最后一行注册的任务为’default’也就是grunt的默认任务, 里面包括了’uglify’ ‘cssmin’ ‘devtools’三个子任务。 在项目根目录执行命令 grunt就会执行default里面的任务， 或者 grunt[task name]执行其中一个单独的任务。</p></li></ul><h4 id="webapp开发框架" tabindex="-1">WebAPP开发框架 <a class="header-anchor" href="#webapp开发框架" aria-label="Permalink to &quot;WebAPP开发框架&quot;">​</a></h4><p><strong>AngularJS</strong></p><p>AngularJS是一款来自Google的前端JS框架，它的核心特性有：MVC、双向数据绑定、指令和语义化标签、模块化工具、依赖注入、HTML模板，以及对常用工具的封装，例如$http、$cookies、$location等。AngularJS框架的体积非常小，但是设计理念和功能却非常强大，值得前端开发者深入学习。还有类似的框架如Knockout.js</p><p><strong>Sencha Touch</strong></p><p>优点</p><ul><li>用户体验最接近Native App， 具有整体的UI组件、布局解决方案；</li><li>统一的编程代码结构和要求，良好组织的代码易于维护；</li><li>继承ExtJS 4的应用程序MVC架构</li><li>完善的API文档，示例；活跃的社区，网上有大量的文档书籍帮助学习；</li></ul><p>缺点</p><ul><li>兼容性差，仅支持webkit内核的浏览器；</li><li>框架比较重量级，学习成本比较高；</li><li>商业化使用有版权问题；</li></ul><p><strong>jQuery Mobile</strong></p><p>优点</p><ul><li>跨浏览器兼容性最好，几乎兼容所有的平台和浏览器</li><li>入门简单，语法简洁，编码灵活，一些简单的应用直接用HTML既可实现，无需Javascript</li><li>开源插件与第三方扩展网上资源丰富；</li><li>完善的API文档，示例；活跃的社区，网上有大量的文档书籍帮助学习；</li></ul><p>缺点</p><ul><li>jQuery Mobile对代码没有特定的要求，后期维护难度较大；</li></ul><p><strong>phoneGap</strong></p><p>一个开源的开发框架，使用HTML、CSS和JavaScript来构建跨平台的移动应用程序。它使开发者能够利用iPhone、Android、 Palm、Symbian、BlackBerry、Windows Phone和Bada等智能手机的核心功能，包括地理定位、加速器、联系人、声音和振动等。除了在本地编译应用之外，还可以使用PhoneGap提供的云 端Build工具进行应用编译。也就是说，只需要将用HTML5写好的应用上传到PhoneGap的云端服务器，PhoneGap Build即可将其编译成适合不同平台的应用。</p><h4 id="前端开发工具库" tabindex="-1">前端开发工具库 <a class="header-anchor" href="#前端开发工具库" aria-label="Permalink to &quot;前端开发工具库&quot;">​</a></h4><ul><li><p>轻量级工具库zepto</p><p>为什么不是jQuery？因为jQuery的目标是兼容所有的主流浏览器，这就意味着会有大量的代码对移动端的浏览器是无用或低效的，zepto是针对移动端的浏览器编写的，因此体积较小、效率会高一些，zepto的api完全效仿了jQuery，所以学习成本非常低。</p><p>下载zepto</p><p>下载还要单独讲？没错，一般的插件我们直接从官网下载就可以用了，但是最新的zepto源码其实是由17个模块组成的，官网默认提供的只有5个模块（zepto,event,ajax,form,ie），还有12个模块是没有打包的（detect,fx,fx_methods,assets,data,deferred,callbacks,selector,touch,gesture,stack,ios3）如下图github上的截图。</p><p><img src="'+l+'" alt="3"></p><p>在使用zepto的时候我们可能希望添加一些模块或者去掉一些默认的模块来控制文件的大小，这时候我们就要下载github上的源码，并编译出自己需要的文件。</p><p>步骤：</p><ol><li><p>安装nodejs环境</p></li><li><p>运行下面的命令</p><p><img src="'+p+`" alt="4"></p><p>编译出来的文件就在dist目录下</p></li></ol></li><li><p>单页面路由routie</p><p>我们在开发webapp的时候，为了提高体验，经常会做成单页面的应用，这就需要由路由对整个应用进行控制。</p><p>Routie是一个非常小的单纯的javascript hash 路由库，gzip后大小为800bytes,并且功能很强大，用法很简单。官网地址：<a href="http://projects.jga.me/routie/" target="_blank" rel="noreferrer">http://projects.jga.me/routie/</a></p></li><li><p>Requirejs/seajs&amp;commonJS/AMD/CMD</p><p>JS模块化开发一直都有开发者在探索和研究，当nodejs出现后，模块化变的更加重要和有必要。</p><p>nodejs 环境的模块化加载，开发者已经利用commonJS机制来解决，commonJS是服务器端模块的规范，根据commonJS一个单独的文件就是一个模块。加载模块使用require方法，该方法取一个文件并执行，返回文件内部的exports对象。</p><p>CommonJS规范加载是同步的，只有加载完成才可以继续后面的操作。</p><p>AMD规范则是异步加载模块，允许指定回调函数，因为nodejs主要用于服务器端编程，模块文件一般都存在本地硬盘上，所以加载会很快，CommonJs比较适用。但是在浏览器环境，要从服务器端加载模块，这时候就有必要采用异步的方式，因此浏览器一般都采用AMD规范。</p><p>AMD和CMD区别：AMD是RequireJS在推广过程中对模块定义的规范化产出，CMD是SeaJS在推广过程中对模块定义的规范化产出，目的都是为了javascript的模块化开发。</p><p>对于依赖的模块AMD是提前执行，CMD是延迟执行。RequireJS从2.0开始也改成可以延迟执行（写法不同，处理方式不同），CMD是依赖就近。</p></li></ul><h4 id="性能相关" tabindex="-1">性能相关 <a class="header-anchor" href="#性能相关" aria-label="Permalink to &quot;性能相关&quot;">​</a></h4><h5 id="动画" tabindex="-1">动画 <a class="header-anchor" href="#动画" aria-label="Permalink to &quot;动画&quot;">​</a></h5><p>手机端因为硬件的偏弱，相对于PC会面对更多的性能问题， 所以动画的性能要求很高，目前对提升移动端动画主要方法有几点：</p><ul><li><p>尽可能的利用硬件加速，所使用3D变形来开启GPU加速。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-transform: translate3d(0, 0, 0);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-moz-transform: translate3d(0, 0, 0);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-ms-transform: translate3d(0, 0, 0);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transform: translate3d(0, 0, 0);</span></span></code></pre></div><p>如动画过程有闪烁（通常发生在动画开始的时候），可以尝试下面的Hack：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-backface-visibility: hidden;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-moz-backface-visibility: hidden;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-ms-backface-visibility: hidden;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">backface-visibility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: hidden;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-perspective: 1000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-moz-perspective: 1000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-ms-perspective: 1000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">perspective: 1000;</span></span></code></pre></div></li></ul><h5 id="布局" tabindex="-1">布局 <a class="header-anchor" href="#布局" aria-label="Permalink to &quot;布局&quot;">​</a></h5><ul><li><p>尽可能少的使用 box-shadows与gradients box-shadows与gradients往往都是页面的性能杀手，尤其是在一个元素同时都使用了它们。</p></li><li><p>尽可能的让动画元素不在文档流中，以减少重排</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Position:fixed </span></span>
<span class="line"><span>position:absolute</span></span></code></pre></div></li></ul><h4 id="缓存相关" tabindex="-1">缓存相关 <a class="header-anchor" href="#缓存相关" aria-label="Permalink to &quot;缓存相关&quot;">​</a></h4><h5 id="为什么用缓存" tabindex="-1">为什么用缓存 <a class="header-anchor" href="#为什么用缓存" aria-label="Permalink to &quot;为什么用缓存&quot;">​</a></h5><p>页面的缓存可以减少网络带宽消耗，减轻服务器的压力，减少网络的延迟，加快页面展示速度</p><h5 id="常用的缓存" tabindex="-1">常用的缓存 <a class="header-anchor" href="#常用的缓存" aria-label="Permalink to &quot;常用的缓存&quot;">​</a></h5><ol><li>浏览器http缓存</li><li>Cookie</li><li>Webstorage (localstorage/sessionstorage)</li><li>Manifest</li><li>Local Database</li></ol><h5 id="localstorage的使用" tabindex="-1">Localstorage的使用 <a class="header-anchor" href="#localstorage的使用" aria-label="Permalink to &quot;Localstorage的使用&quot;">​</a></h5><p>Localstorage是html5新增的特性，早前的Cookies主要的问题是太小，大概只能存4K，并且IE6只支持每个域名20个cookies, IE有专门的userData，基本是被flash来用的，大小是cookies的25倍左右，localstorage是html5统一的，新的浏览器都支持这一特性，大概每个站点可以存下5M的数据，内容只能存字符串，支持情况：</p><ul><li><p>PC端： IE8+, FF3.0+, Opera10.5+, Chrome 4.0+, safari 4.0+</p></li><li><p>Mobile端： iPhone 2.0+, Android 2.0+</p><p>在网上看到有时候在使用过程中iPhone/iPad上面会在设置setItem()的时候出现诡异的QUOTA_EXCEEDED_ERR错误，一般在设置setItem之前，先removeItem就好了。</p><p>当然localstorage用来存什么东西并没有严格的规定，根据个人需求来合理使用，在这里介绍一个用来优化性能而使用localstorage储存代码的实例。这大大提高了页面的加载性能（除首次加载）； 需要注意的一点是因为采用是异步加载js文件，所有要注意代码的执行顺序，具体情况具体处理。</p></li></ul><h5 id="manifest的使用" tabindex="-1">Manifest的使用 <a class="header-anchor" href="#manifest的使用" aria-label="Permalink to &quot;Manifest的使用&quot;">​</a></h5><p>H5新增的离线存储功能给离线应用带来了福音，但是在使用中会遇到一些意想不到的问题，经测试，更新了文件后，改变manifest版本号，发现手机没有更新到最新的代码，经调研，manifest文件是每次都去请求的，问题出在浏览器的默认缓存会把manifest文件缓存，所以在请求manifest的时候，浏览器会优先监测浏览器本身的缓存，如果发现manifest还未过期就会从缓存中拉取而不是从服务器端请求，这样就导致了无法更新到最新的代码，解决办法是服务器端在返回的时候禁用浏览器缓存。</p><p>另外就是已经上线的程序希望去掉manifest缓存，需要将manifest文件从服务器端删除，并且关键的一点是服务器端一定要返回404,否则将无法删除，另外一个是没有办法的办法，换文件路径。</p><h4 id="页面调试" tabindex="-1">页面调试 <a class="header-anchor" href="#页面调试" aria-label="Permalink to &quot;页面调试&quot;">​</a></h4><h5 id="常用的调试方法" tabindex="-1">常用的调试方法 <a class="header-anchor" href="#常用的调试方法" aria-label="Permalink to &quot;常用的调试方法&quot;">​</a></h5><p>开发时候的调试基本是在chrome的控制台Emulation完成</p><p>现有的一些手机端调试方案：</p><ol><li>Remote debugging with Opera Dragonfly 需要wifi网络，下载最新的桌面版的opera,下载手机端的opera,通过桌面版的opera进行远程调试。</li><li>Using Firebug on mobile Firebug lite可以用在任何能运行js的浏览器上， 在页面中引入firebug-lite.js即可<a href="https://getfirebug.com/firebug-lite.js" target="_blank" rel="noreferrer">https://getfirebug.com/firebug-lite.js</a></li><li>Remote Javascript debugging with JS console <a href="http://jsconsole.com/" target="_blank" rel="noreferrer">http://jsconsole.com/</a></li></ol><p>Remote debugging with weinre 需要下载weinre jar包 开启服务</p><h5 id="weinre的使用" tabindex="-1">Weinre的使用 <a class="header-anchor" href="#weinre的使用" aria-label="Permalink to &quot;Weinre的使用&quot;">​</a></h5><p>安装步骤：</p><ol><li>安装npm</li><li>npm install weinre –g</li><li>会在目录C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules下看到weinre，这便是它的主目录了。注： 每次cd一个文件夹，逐目录cd下去才能到达目标文件夹。</li><li>cmd中进入该主目录，运行weinre –httpPort 8080 –boundHost -all-</li><li>在要调试的页面加上<code>&lt;script src=&quot;http://yourIp:8080/target/target-script-min.js&quot;&gt;&lt;/script&gt;</code></li><li>手机浏览器上打开 http:// yourIp:8080/client/</li></ol><h5 id="android-sdk" tabindex="-1">Android SDK <a class="header-anchor" href="#android-sdk" aria-label="Permalink to &quot;Android SDK&quot;">​</a></h5><p><a href="http://developer.android.com/sdk/index.html?utm_source=weibolife" target="_blank" rel="noreferrer">下载</a></p><ol><li><p>打开目录，找到tools下的ddms.bat，运行。</p><p><img src="`+n+`" alt="5"></p></li></ol><h4 id="兼容性问题归纳" tabindex="-1">兼容性问题归纳 <a class="header-anchor" href="#兼容性问题归纳" aria-label="Permalink to &quot;兼容性问题归纳&quot;">​</a></h4><h5 id="android2-3的overflow问题" tabindex="-1">Android2.3的overflow问题 <a class="header-anchor" href="#android2-3的overflow问题" aria-label="Permalink to &quot;Android2.3的overflow问题&quot;">​</a></h5><p>在android2.3及以下系统版本的浏览器不支持overflow：scroll / auto，即在页面元素里面的内容如果超过了父元素或祖先元素的高度是无法滚动的，可以通过css3的transform来实现滚动，代表作：iscroll。</p><h5 id="android2-3的聚焦问题" tabindex="-1">Android2.3的聚焦问题 <a class="header-anchor" href="#android2-3的聚焦问题" aria-label="Permalink to &quot;Android2.3的聚焦问题&quot;">​</a></h5><p>Android2.3会出现点击聚焦的情况，出现黄色的边框，通过对相应的元素设置css –webkit-tap-highlight-color: rgba(0,0,0,0)解决，另外一些高版本的系统也可能会出现有黄色边框的情况，这时候试着用outline：none来解决。</p><h5 id="android2-3-position-fixed及input中文输入bug" tabindex="-1">Android2.3 position:fixed及input中文输入bug <a class="header-anchor" href="#android2-3-position-fixed及input中文输入bug" aria-label="Permalink to &quot;Android2.3 position:fixed及input中文输入bug&quot;">​</a></h5><p>在android2.3系统中，如果页面中有position为fixed的元素，input外层的元素定位为relative或者自身的定位为relative，就会产生一种奇怪的现象，在input中输入数字或者字母都很正常，当切换输入法为中文后，发现无法输入，当把position设置为absolute后一切正常，所有当遇到这种情况时就只能改变布局了。</p><h5 id="android2-3-border-radius问题" tabindex="-1">Android2.3 border-radius问题 <a class="header-anchor" href="#android2-3-border-radius问题" aria-label="Permalink to &quot;Android2.3 border-radius问题&quot;">​</a></h5><p>不支持百分比，可用一个比较大的值 如： 9999px。</p><h5 id="android2-3-动画问题" tabindex="-1">Android2.3 动画问题 <a class="header-anchor" href="#android2-3-动画问题" aria-label="Permalink to &quot;Android2.3 动画问题&quot;">​</a></h5><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@-webkit-keyframes</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> wave1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    0%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    8.33%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    99%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>100%要留一帧空出来。在100%之前写一个最后值 99%那里写。2.3系统的动画才会动。</p><h5 id="android2-3渐变问题" tabindex="-1">Android2.3渐变问题 <a class="header-anchor" href="#android2-3渐变问题" aria-label="Permalink to &quot;Android2.3渐变问题&quot;">​</a></h5><p>渐变这样写2.3才兼容：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">background</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:-webkit-gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(linear, 0 0, 0 100%, color-stop(1%,rgba(111,191,7,0)), color-stop(74%,rgba(111,191,7,0)), color-stop(75%,rgba(111,191,7,0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)), color-stop(100%,rgba(111,191,7,0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)));</span></span></code></pre></div><p>Linear是指渐变方式，0 0指从哪个方向开始。0 0 到 0 100% 说明是从上到下渐变。 后面的color-stop 可以指定百分比和颜色值。</p><h5 id="android4-0及低版本系统touch事件bug" tabindex="-1">Android4.0及低版本系统touch事件bug <a class="header-anchor" href="#android4-0及低版本系统touch事件bug" aria-label="Permalink to &quot;Android4.0及低版本系统touch事件bug&quot;">​</a></h5><p>在android4.0系统中，存在部分子版本的系统有touch事件的bug，表现为touchstart是正常的，touchmove只有在touchstart触发的时候触发一次，touchend不会被触发，android2.3会触发startmove一次，当touch结束后会执行剩余的move和end。在zepto库中此问题也没有得到解决,在android4.2系统中也存在这样的问题，后来发现是浏览器将事件cancel调了，目的应该是防止在滚动页面的时候调用，所以在touchmove事件中添加e.preventDefault()，发现touchend被触发了，所以解决方案根据实际使用场景来进行处理。</p><h5 id="android4-x-placeholder问题" tabindex="-1">Android4.X placeholder问题 <a class="header-anchor" href="#android4-x-placeholder问题" aria-label="Permalink to &quot;Android4.X placeholder问题&quot;">​</a></h5><p>placeholder 文字字体会偏上。 但是placeholder只能设置他的color。如：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:-webkit-input-placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>行高不能设置。这时候把line-height设成normal 就能上下居中了。</p><h5 id="各个系统对position-fixed的支持情况" tabindex="-1">各个系统对position:fixed的支持情况 <a class="header-anchor" href="#各个系统对position-fixed的支持情况" aria-label="Permalink to &quot;各个系统对position:fixed的支持情况&quot;">​</a></h5><p>手机Safari – iOS5及以后版本都支持. iOS4及以下版本不支持，会当做static处理.</p><p>Android</p><ul><li>Android 2.1 及以下版本不支持.</li><li>Android 2.2 滚动过程中不保持fixed的位置，滚动完成后回到fixed的位置.</li><li>Android 2.3 支持fixed, 但是要求页面禁止缩放.</li><li>Android 3和4支持fixed.</li></ul><h5 id="touchstart-click-tap事件分析" tabindex="-1">Touchstart, click, tap事件分析 <a class="header-anchor" href="#touchstart-click-tap事件分析" aria-label="Permalink to &quot;Touchstart, click, tap事件分析&quot;">​</a></h5><p>在移动端我们会经常用到touch事件，touchstart事件很灵敏，所有如果要绑定类似于pc端的click事件，用touchstart会经常的误操作，例如滚动页面的时候被误点，所有市面上有很多手势库，封装出了tap等方面，而在移动端click事件也是可以触发的，click事件会在点击300ms左右出发（原因是浏览器希望判断是否是双击），原始的解释参见google这篇[Creating Fast Buttons for Mobile Web Applications](Creating Fast Buttons for Mobile Web Applications)，个人经过实验，页面元素的点击可以考虑用click，和tap效果无明显差别，所以在没有手势库的情况下可以考虑用click来处理用户的点击行为。</p><h5 id="禁用webkit浏览器默认样式" tabindex="-1">禁用webkit浏览器默认样式 <a class="header-anchor" href="#禁用webkit浏览器默认样式" aria-label="Permalink to &quot;禁用webkit浏览器默认样式&quot;">​</a></h5><p>webkit上的input,button,及select的默认样式可以通过 –webkit-appearance:none禁用，然后自定义。</p><h5 id="placeholder自适应bug" tabindex="-1">Placeholder自适应bug <a class="header-anchor" href="#placeholder自适应bug" aria-label="Permalink to &quot;Placeholder自适应bug&quot;">​</a></h5><p>一个placeholder自适应bug，页面中使用<code>&amp;lt;input&amp;gt;</code>标签并且有属性placeholder，在页面横屏再转回竖屏时，会导致页面无法自适应，无论是android还是ios都会中招。</p><p>解决方法是，在<code>&amp;lt;input&amp;gt;</code>外层容器中加overflow:hidden</p><h5 id="无刷新改变当前页面url的问题整理" tabindex="-1">无刷新改变当前页面url的问题整理 <a class="header-anchor" href="#无刷新改变当前页面url的问题整理" aria-label="Permalink to &quot;无刷新改变当前页面url的问题整理&quot;">​</a></h5><p>Android 2.3系统存在的问题：</p><ol><li>无刷新改变当前页面url。不支持onpopstate方法，可用onhashchange方法代替。</li><li>虽然支持history的pushState方法和window.onpopstate方法。但是按回退键，即发生history.back()的时候，不会触发window.onpopstate方法。只会触发hashchange事件。</li></ol><p>浏览器对popstate事件的整体支持情况：</p><ol><li>history的pushState可操作浏览器历史，并且改变当前页面的URL。添加对应的url到历史记录里。但是用pushState方法会产生历史记录，可用replaceState方法代替，不会产生额外的历史记录。</li><li>hashchange 和popstate事件 触发的时候，hash已经改变了，无法阻止默认行为。即e.preventDefault()不起作用。</li><li>pushState()方法永远不会触发hashchange事件</li><li>popstate方法的触发条件：</li></ol><ul><li>页面前进、后退时触发。</li><li>Hashchange时触发</li></ul><ol start="5"><li>如何跳转</li></ol><ul><li>如果history堆栈里有pushState过，那么就回跳到pushState所定的hash页面。如window.history.pushState(‘object’, document.title, “#explorer”);的#explorer页面</li><li>没有pushState过，就按照history的记录进行回退和前进。</li></ul><h5 id="iscroll插件问题" tabindex="-1">Iscroll插件问题 <a class="header-anchor" href="#iscroll插件问题" aria-label="Permalink to &quot;Iscroll插件问题&quot;">​</a></h5><p>Iscroll插件被很多webapp应用中来实现列表滚动，设置translate属性可以使滚动更加顺滑，但是在iscroll4.0中开启了translate属性后会导致滚动无法手动停止，在问答社区中有人说iscroll5会解决这个问题，等iscroll5正式发布后可以尝试一下。Iscroll在ios上表现很出色，但是在一些android手机，尤其是低端机，性能不是很好，所以使用也要慎重。</p><h4 id="资源分享-来自网络" tabindex="-1">资源分享（来自网络） <a class="header-anchor" href="#资源分享-来自网络" aria-label="Permalink to &quot;资源分享（来自网络）&quot;">​</a></h4><p>推荐一个PPT可以让你全面了解HTML5：<a href="http://slides.html5rocks.com/" target="_blank" rel="noreferrer">http://slides.html5rocks.com/</a></p><p>HTML部分包括大家已经熟知的HTML4.01 Standard <a href="http://www.w3.org/TR/html401/" target="_blank" rel="noreferrer">http://www.w3.org/TR/html401/</a>还有就是即将成为Standard的 HTML 5 Candidate Recommendation <a href="http://www.w3.org/TR/html5/" target="_blank" rel="noreferrer">http://www.w3.org/TR/html5/</a></p><p>HTML5 是在 HTML4的基础上增加了更多的语义化标签，比如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;header&gt;</span></span>
<span class="line"><span>&lt;nav&gt;</span></span>
<span class="line"><span>&lt;section&gt;</span></span>
<span class="line"><span>// 这有太多了，就不一一细说</span></span></code></pre></div><p>并且在原有Tag上，扩展了更多的标记属性，比如：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> required</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;some@email.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><p>HTML5除此之外，还引入了很多新的标签和属性，比如：WebApp开发方向的progress、无障碍浏览ARIA 、做SEO优化Microdata等等。</p><p><a href="http://www.w3.org/standards/techs/html#w3c_all" target="_blank" rel="noreferrer">W3C HTML标准列表</a></p><p>CSS部分也是同样的，大家已经熟知的<a href="http://www.w3.org/TR/CSS2/" target="_blank" rel="noreferrer">CSS2 Standard</a></p><p>W3C最新的是CSS Level3 标准，由于CSS3包含的内容非常多，文档都是分开的，暂时没办法给出所有的标准地址，先贴一部分常用的标准吧：</p><p><a href="http://www.w3.org/standards/techs/css#w3c_all" target="_blank" rel="noreferrer">W3C CSS标准列表</a></p><p><a href="http://www.w3.org/TR/2013/WD-selectors4-20130502/" target="_blank" rel="noreferrer">CSS Selector CSS选取器</a></p><p><a href="http://www.w3.org/TR/2013/WD-css3-transitions-20131119/" target="_blank" rel="noreferrer">Transition 动画过渡效果</a></p><p><a href="http://www.w3.org/TR/2013/WD-css3-animations-20130219/" target="_blank" rel="noreferrer">Animation 页面动画</a></p><p>JS部分对于HTML5来说主要体现在 Web API 方面，所有 API 都是 BOM对象，下面我也列出一些常见的标准地址：</p><p><a href="http://www.w3.org/standards/techs/js#w3c_all" target="_blank" rel="noreferrer">W3C JavaScript API标准列表</a></p><p><a href="http://www.w3.org/TR/touch-events/" target="_blank" rel="noreferrer">Touch Events 触摸手势事件</a></p><p><a href="http://www.w3.org/TR/geolocation-API/" target="_blank" rel="noreferrer">Geolocation 地理位置</a></p><p><a href="http://www.w3.org/TR/webstorage/" target="_blank" rel="noreferrer">Web Storage Web存储</a></p><p>通过上面的内容，大概已经了解HTML5是个什么东西了，下面就来说说HTML5开发APP可以使用的一些资源。其实HTML5开发与以往的Web并没有本质的区别，主要差别体现在HTML5的一些新特性并没有被老旧类库很好的支持，这样就需要一些更现代的类库来使用HTML5做开发。</p><h5 id="js库-框架" tabindex="-1">JS库/框架 <a class="header-anchor" href="#js库-框架" aria-label="Permalink to &quot;JS库/框架&quot;">​</a></h5><p>轻量级库包括</p><p><a href="http://zeptojs.com/" target="_blank" rel="noreferrer">Zepto.js</a> 这个一个在移动端很好用的轻量级库，非常小巧，但是功能也很简单；</p><p><a href="http://jquery.com/" target="_blank" rel="noreferrer">jQuery 2.0</a>这里说的是2.0以后的版本，仅支持一些高级浏览器，使用很多HTML5的特性，虽然在移动端开发体积相对zepto较大了些，但是作为一个基础库来说确实令人爱不释手；</p><h5 id="app框架-下面的框架不仅仅只能用来移动端开发" tabindex="-1">App框架（下面的框架不仅仅只能用来移动端开发） <a class="header-anchor" href="#app框架-下面的框架不仅仅只能用来移动端开发" aria-label="Permalink to &quot;App框架（下面的框架不仅仅只能用来移动端开发）&quot;">​</a></h5><p><a href="http://jquerymobile.com/" target="_blank" rel="noreferrer">jQuery Mobile </a>和jQuery是一样的编程思想，使用起来非常方便，包含浏览历史管理、视图导航渲染、UI组件等功能；</p><p><a href="https://github.com/01org/appframework/" target="_blank" rel="noreferrer">App Framework</a>与jQuery Mobile非常相似的一个框架，实际我也没有使用过，看过了API，基本与jQuery Mobile类似；</p><p><a href="http://www.sencha.com/products/touch/" target="_blank" rel="noreferrer">Sencha Touch </a>Sencha的产品，是完全web组件化的思路，用来做企业应用开发非常的棒，但是，也有很多缺点，比如体积、复杂、性能等等；</p><h5 id="mvc框架" tabindex="-1">MVC框架 <a class="header-anchor" href="#mvc框架" aria-label="Permalink to &quot;MVC框架&quot;">​</a></h5><p><a href="http://backbonejs.org/" target="_blank" rel="noreferrer">Backbone </a>MVC框架推荐Backbone，并不是因为Backbone有多好，但对于移动端开发来说，Backbone的体积是相对小巧的，并且功能也十分简单，很容易上手，AngularJS体积较大，相对要复杂一些；</p><h5 id="ui框架" tabindex="-1">UI框架 <a class="header-anchor" href="#ui框架" aria-label="Permalink to &quot;UI框架&quot;">​</a></h5><p><a href="http://getbootstrap.com/" target="_blank" rel="noreferrer">Bootsrap 3 </a>，用来构建HTML/CSS的；</p><p><a href="http://purecss.io/" target="_blank" rel="noreferrer">Pure CSS </a>与Bootstrap一样的东东；</p><p>工具库（说到工具，实在是太多了，我没办法一一列出来，视乎到这的时候才离题主的问题近了一些）</p><p><a href="https://github.com/cubiq/iscroll" target="_blank" rel="noreferrer">iScroll </a>模拟区域滚动，在移动端开发中使用</p><p><a href="https://github.com/borismus/pointer.js" target="_blank" rel="noreferrer">pointer.js </a>触摸手势工具，用来兼容Pointer Event Model与Touch Event Model；</p><p><a href="http://deeptissuejs.com/" target="_blank" rel="noreferrer">Deeptissue.js</a>触摸手势工具，扩展各种手势事件</p><p><a href="http://quojs.tapquo.com/" target="_blank" rel="noreferrer">QUO.js </a>同上</p><p><a href="https://github.com/EightMedia/hammer.js/" target="_blank" rel="noreferrer">hammer.js </a>也是手势工具，但这是一个jQuery plugin；</p><p><a href="http://fgnass.github.io/spin.js/" target="_blank" rel="noreferrer">spin.js </a>加载中动画小工具</p><p><a href="http://lea.verou.me/css3patterns/" target="_blank" rel="noreferrer">css3patterns</a>使用css3绘制背景</p><p><a href="http://philbit.com/svgpatterns/" target="_blank" rel="noreferrer">svgpatterns</a>使用svg绘制背景</p><p><a href="http://jschr.github.io/textillate/" target="_blank" rel="noreferrer">textillate.js</a>各种文字动画效果</p><p><a href="http://h5bp.github.io/Effeckt.css/dist/" target="_blank" rel="noreferrer">Effeckt.css</a>各种CSS3的动画效果</p><p><a href="http://www.jplayer.org/" target="_blank" rel="noreferrer">JPlayer </a>音视频播放工具</p><h5 id="css3代码生成工具" tabindex="-1">CSS3代码生成工具 <a class="header-anchor" href="#css3代码生成工具" aria-label="Permalink to &quot;CSS3代码生成工具&quot;">​</a></h5><p><a href="http://ie.microsoft.com/testdrive/Graphics/hands-on-css3/see-also.htm" target="_blank" rel="noreferrer">http://ie.microsoft.com/testdrive/Graphics/hands-on-css3/see-also.htm</a> IE官方提供的一个工具，非常好用，功能很多；</p><p><a href="http://cubic-bezier.com/" target="_blank" rel="noreferrer">贝塞尔曲线</a></p><p><a href="http://the-echoplex.net/flexyboxes/" target="_blank" rel="noreferrer">flexbox布局</a></p><p><a href="http://cssarrowplease.com/" target="_blank" rel="noreferrer">css3箭头</a></p><p><a href="http://heartcode.robertpataki.com/canvasloader/" target="_blank" rel="noreferrer">canvas loading</a></p><p>[transform变形] (<a href="http://www.css88.com/tool/css3Preview/Transform.html" target="_blank" rel="noreferrer">http://www.css88.com/tool/css3Preview/Transform.html</a>)</p><p><a href="http://www.responsivewebcss.com/" target="_blank" rel="noreferrer">响应式布局</a></p><p><a href="http://nmsdvid.com/snippets/" target="_blank" rel="noreferrer">@media工具</a></p><p><a href="http://css3ps.com/" target="_blank" rel="noreferrer">PhotoShop CSS3 plugin</a></p><p>最后分享两个不错的移动端开发资源</p><p><a href="https://github.com/exfork/mobileTech" target="_blank" rel="noreferrer">https://github.com/exfork/mobileTech</a></p><p><a href="https://github.com/exfork/Mars" target="_blank" rel="noreferrer">https://github.com/exfork/Mars</a></p><p>本文转载自：<a href="http://mweb.baidu.com/p/webapp%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5.html" target="_blank" rel="noreferrer">云和移动的彼端</a></p>`,157),d=[h];function c(k,u,g,b,m,f){return i(),e("div",null,d)}const y=a(o,[["render",c]]);export{w as __pageData,y as default};
