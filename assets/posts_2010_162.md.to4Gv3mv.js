import{_ as i,c as s,o as e,U as l}from"./chunks/framework.I0qYP7JU.js";const c=JSON.parse('{"title":"JavaScript（IE/FF）兼容问题","description":"","frontmatter":{"title":"JavaScript（IE/FF）兼容问题","tags":["JavaScript"],"id":162,"author":"welpher.yu","categories":["web前端"],"date":"2010-08-08T20:43:50.000Z"},"headers":[],"relativePath":"posts/2010/162.md","filePath":"posts/2010/162.md"}'),t={name:"posts/2010/162.md"},a=l(`<blockquote><p>写在前：这篇文章很多东西是在网上收集，出处我就不写了，自己整理一下也就是方便个人以后参考，文章以自己看得懂的方式写。欢迎大家拍拍砖，以后有机会再补充其它浏览器兼容问题。</p></blockquote><p>我们知道，各种浏览器对js的支持是不一样的，我们在写前端代码的时候肯定会遇到写兼容代码的问题。虽然说现在的很多库都封装了这些兼容代码，但是对于想成为高手的童鞋们，会用库/框架是不够的。 好现在进入正题： 以下以 IE 代替 Internet Explorer，以 MF/FF 代替 Mozzila Firefox</p><ol><li><p>document.form.item</p><ul><li>IE：现在程序中有document.formName.item(“itemName”)的写法，是不能在FF下执行的</li><li>FF：不能在FF下执行的</li><li>解决方法：改用document.formName.elements[“elementName”]，其它问题参见后面2</li></ul></li><li><p>集合类问题(这个问题完全可以在学习js编程的时候避免)</p><ul><li>IE：程序中有取集合中项目时用()，IE能接受，</li><li>FF：不能。</li><li>解决方法：是改用[]作为下标运算。如：改document.forms(“formName”)为document.forms[“formName”],又如：改document.getElementsByName(“inputName”)(1)为document.getElementsByName(“inputName”)[1]</li></ul></li><li><p>window.event</p><ul><li><p>IE：有window.event对象</p></li><li><p>FF：没有window.event对象。可以通过给函数的参数传递event对象。如onmousemove=doMouseMove(event)</p></li><li><p>解决方法：var event = event || window.event; example:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">function test(event) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    var event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //do Something</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onclick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test(event)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div></li></ul></li><li><p>HTML元素中的id作为属性的问题</p><ul><li>IE：html元素中的id可以作为document的下属属性名称使用，如document.idName</li><li>FF：不行</li><li>解决方法：用getElementById(“idName”)代替</li></ul></li><li><p>eval(idName)取html元素问题</p><ul><li>IE：可以</li><li>FF：不能</li><li>解决方法：用getElementById(idname)代替</li></ul></li><li><p>鼠标当前坐标</p><ul><li><p>IE：event.x和event.y。</p></li><li><p>FF：event.pageX和event.pageY。</p></li><li><p>通用：两者都有event.clientX和event.clientY属性。</p></li><li><p>解决方法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.pageX;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.pageY;</span></span></code></pre></div></li></ul><p>也可以用event.clientX代替event.pageX，它们的差别在于有滚动条的时候，不过大多数时候是等同的。</p></li><li><p>鼠标当前坐标(加上滚动条滚过的距离)</p><ul><li><p>IE：event.offsetX和event.offsetY</p></li><li><p>FF：event.layerX和event.layerY</p></li><li><p>解决方法：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.event;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //or var event = event ? event : window.event;//这2中都可以，也可以用if else（这简写）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.offsetX </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.layerX;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.offsetY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.layerY;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //do Something</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onmousedown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">event</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;  /**其他的兼容的解决方法类似，不再一一举例**/</span></span></code></pre></div></li></ul></li><li><p>event.srcElement问题</p><ul><li>IE下,event对象有srcElement属性,但是没有target属性;</li><li>Firefox下,even对象有target属性,但是没有srcElement属性.</li><li>解决方法: 使用obj(obj = event.srcElement ? event.srcElement : event.target;)来代替IE下的event.srcElement或者Firefox下的event.target. 请同时注意event的兼容性问题。</li></ul></li><li><p>event.toElement问题</p><ul><li>IE下，even对象有srcElement属性，但是没有target属性； * Firefox下，even对象有target属性，但是没有srcElement属性</li><li>解决方法：var target = e.relatedTarget || e.toElement;</li></ul></li><li><p>标签的x和y的坐标位置：style.posLeft 和 style.posTop</p><ul><li>IE：有</li><li>FF：没有。</li><li>通用：object.offsetLeft 和 object.offsetTop。</li></ul></li><li><p>窗体的高度和宽度</p><ul><li>IE：document.body.offsetWidth和document.body.offsetHeight。注意：此时页面一定要有body标签。</li><li>FF：window.innerWidth和window.innerHegiht，以及document.documentElement.clientWidth和document.documentElement.clientHeight。</li><li>通用：document.body.clientWidth和document.body.clientHeight。</li></ul></li><li><p>添加事件</p><ul><li>IE：element.attachEvent(&quot;onclick&quot;, function);。</li><li>FF：element.addEventListener(&quot;click&quot;, function, true)。</li><li>通用：element.onclick=function。虽然都可以使用onclick事件，但是onclick和上面两种方法的效果是不一样的，onclick 只有执行一个过程，而attachEvent和addEventListener执行的是一个过程列表，也就是多个过程。例如：element.attachEvent(&quot;onclick&quot;, func1);element.attachEvent(&quot;onclick&quot;, func2)这样func1和func2都会被执行。</li></ul></li><li><p>标签的自定义属性</p><ul><li>IE：如果给标签div1定义了一个属性value，可以div1.value和div1[&quot;value&quot;]取得该值。</li><li>FF：不能用div1.value和div1[&quot;value&quot;]取。</li><li>通用：div1.getAttribute(&quot;value&quot;)。</li></ul></li><li><p>document.form.item 问题</p><ul><li>IE:现有问题：现有代码中存在许多 document.formName.item(&quot;itemName&quot;) 这样的语句，不能在 MF 下运行</li><li>FF/IE：document.formName.elements[&quot;elementName&quot;]</li></ul></li><li><p>集合/数组类对象问题</p><ul><li>现有问题：现有代码中许多集合类对象取用时使用，IE能接受，MF不能。</li><li>解决方法：改用 [] 作为下标运算。如：document.forms(&quot;formName&quot;) 改为 document.forms[&quot;formName&quot;]。又如：document.getElementsByName(&quot;inputName&quot;)改为 document.getElementsByName(&quot;inputName&quot;)[1]</li></ul></li><li><p>HTML 对象的 id 作为对象名的问题</p><ul><li>现有问题：在IE中，HTML 对象的 ID 可以作为 document 的下属对象变量名直接使用。在MF中不能。</li><li>解决方法：用 getElementById(&quot;idName&quot;) 代替 idName 作为对象变量使用</li></ul></li><li><p>用idName字符串取得对象的问题</p><ul><li>现有问题：在IE中，利用 eval(idName) 可以取得 id 为 idName 的HTML对象，在MF 中不能。</li><li>解决方法：用 getElementById(idName) 代替 eval(idName)。</li></ul></li><li><p>变量名与某 HTML 对象 id 相同的问题</p><ul><li>现有问题：在 MF 中，因为对象 id 不作为 HTML 对象的名称，所以可以使用与 HTML 对象 id 相同的变量名，IE 中不能。</li><li>解决方法：在声明变量时，一律加上 var ，以避免歧义，这样在 IE 中亦可正常运行。此外，最好不要取与 HTML 对象 id 相同的变量名，以减少错误。</li></ul></li><li><p>document.getElementsByName() 和 document.all[name] 的问题</p><ul><li>现有问题：在 IE 中，getElementsByName()、document.all[name] 均不能用来取得 div 元素（是否还有其它不能取的元素还不知道）。</li></ul></li><li><p>document.all</p><ul><li>Firefox可以兼容document.all， 但会生成一条警告。可以用getElementById(&quot;*&quot;) 或者getElementByTagName(&quot;*&quot;)来代替,不过对于document.all.length等属性，则完全不兼容</li></ul></li><li><p>input.type属性问题</p><ul><li>说明:IE下input.type属性为只读;但是Firefox下input.type属性为读写</li></ul></li><li><p>window.location.href问题</p><ul><li>说明:IE或者Firefox2.0.x下,可以使用window.location或window.location.href;Firefox1.5.x下,只能使用window.location</li><li>解决方法:使用window.location来代window.location.href</li></ul></li><li><p>模态和非模态窗口问题</p><ul><li><p>IE下,可以通过showModalDialog和showModelessDialog打开模态和非模态窗口;</p></li><li><p>Firefox下则不能</p></li><li><p>解决方法:直接使用window.open(pageURL,name,parameters)方式打开新窗口。 如果需要将子窗口中的参数传递回父窗口,可以在子窗口中使用window.opener来访问父窗口. 例如：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parWin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.opener;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parWin.document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Aqing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Aqing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li></ul></li><li><p>frame问题</p><ul><li><p>访问frame对象。IE:使用window.frameId或者window.frameName来访问这个frame对象. frameId和frameName可以同名；FF:只能使用window.frameName来访问这个frame对象. 另外，在IE和Firefox中都可以使用window.document.getElementById(&quot;frameId&quot;)来访问这个frame对象.</p></li><li><p>切换frame内容。在IE和Firefox中都可以使用window.document.getElementById(&quot;testFrame&quot;).src = &quot;xxx.html&quot;或window.frameName.location = &quot;xxx.html&quot;来切换frame的内容. 如果需要将frame中的参数传回父窗口(注意不是opener,而是parent frame)，可以在frme中使用parent来访问父窗口。例如：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div></li></ul></li></ol><p>window.parent.document.form1.filename.value=&quot;Aqing&quot;; \`\`\`</p><ol start="25"><li><p>body问题</p><ul><li>Firefox的body在body标签没有被浏览器完全读入之前就存在；而IE的body则必须在body标签被浏览器完全读入之后才存在</li></ul></li><li><p>事件委托方法</p><ul><li>IE：document.body.onload = inject; //Function inject()在这之前已被实现</li><li>FF：document.body.onload = inject();</li></ul></li><li><p>firefox与IE的父元素(parentElement)的区别</p><ul><li>IE：obj.parentElement</li><li>FF：obj.parentNode</li><li>解决方法: 因为FF与IE都支持DOM,因此使用obj.parentNode是不错选择</li></ul></li><li><p>innerText在IE中能正常工作，但是innerText在FireFox中却不行. 需用textContent</p></li><li><p>FireFox中设置HTML标签的style时，所有位置性和字体尺寸的值必须后跟px。这个ie也是支持的</p></li><li><p>父节点、子节点和删除节点</p><ul><li>IE：parentElement、parement.children，element.romoveNode(true)。</li><li>FF：parentNode、parentNode.childNodes，node.parentNode.removeChild(node)。</li></ul></li><li><p>对select的options集合操作</p><ul><li>枚举元素除了[]外，SelectName.options.item()也是可以的, 另外SelectName.options.length,SelectName.options.add/remove都可以在两种浏览器上使用。注意在add后赋值元素，否则会失败</li><li>动态删除select中的所有options： document.getElementById(&quot;ddlResourceType&quot;).options.length=0;</li><li>动态删除select中的某一项option： document.getElementById(&quot;ddlResourceType&quot;).options.remove(indx);</li><li>动态添加select中的项option: document.getElementById(&quot;ddlResourceType&quot;).options.add(new Option(text,value));</li><li>IE FF 动态删除通用方法： document.getElementById(&quot;ddlResourceType&quot;).options[indx] = null;</li></ul></li><li><p>捕获事件</p><ul><li><p>FF没有setCapture()、releaseCapture()方法</p></li><li><p>解决方法： IE: obj.setCapture(); obj.releaseCapture(); FF:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">captureEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Event.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOUSEMOVE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Event.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOUSEUP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">releaseEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Event.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOUSEMOVE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Event.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOUSEUP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.captureEvents) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    o.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setCapture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">captureEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Event.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOUSEMOVE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Event.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOUSEUP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.captureEvents) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    o.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">releaseCapture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">releaseEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Event.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOUSEMOVE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Event.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOUSEUP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul></li><li><p>禁止选取网页内容</p><ul><li>问题：FF需要用CSS禁止，IE用JS禁止</li><li>解决方法： IE: obj.onselectstart = function() {return false;} FF: -moz-user-select:none;</li></ul></li><li><p>画图</p><ul><li>IE：VML。</li><li>FF：SVG。</li></ul></li><li><p>CSS：透明</p><ul><li>IE: filter:progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=60)。</li><li>FF：opacity:0.6。</li></ul></li><li><p>CSS圆角</p><ul><li><p>IE：不支持圆角。</p></li><li><p>FF：-moz-border-radius:4px，或者</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-moz-border-radius-topleft:4px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-moz-border-radius-topright:4px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-moz-border-radius-bottomleft:4px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-moz-border-radius- bottomright:4px;</span></span></code></pre></div></li></ul></li><li><p>CSS双线凹凸边框</p><ul><li>IE：border:2px outset;。</li><li>FF：-moz- border-top-colors: #d4d0c8 white; -moz-border-left-colors: #d4d0c8 white; -moz-border-right-colors:#404040 #808080; -moz-border-bottom-colors:#404040 #808080;。</li></ul></li></ol>`,5),n=[a];function p(h,k,E,o,d,r){return e(),s("div",null,n)}const g=i(t,[["render",p]]);export{c as __pageData,g as default};
