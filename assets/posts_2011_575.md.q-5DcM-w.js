import{_ as a,c as e,o as r,U as m}from"./chunks/framework.I0qYP7JU.js";const h=JSON.parse('{"title":"CentOS yum的详细使用方法","description":"","frontmatter":{"title":"CentOS yum的详细使用方法","tags":["centos","yum"],"id":575,"author":"welpher.yu","categories":["服务器"],"date":"2011-11-22T09:01:34.000Z"},"headers":[],"relativePath":"posts/2011/575.md","filePath":"posts/2011/575.md"}'),t={name:"posts/2011/575.md"},u=m('<p>yum是什么 yum = Yellow dog Updater, Modified 主要功能是更方便的添加/删除/更新RPM包. 它能自动解决包的倚赖性问题. 它能便于管理大量系统的更新问题</p><p>yum特点 可以同时配置多个资源库(Repository) 简洁的配置文件(/etc/yum.conf 自动解决增加或删除rpm包时遇到的倚赖性问题 使用方便 保持与RPM数据库的一致性</p><p>yum安装 CentOS自带(yum-<em>.noarch.rpm) #rpm -ivh yum-</em>.noarch.rpm 在第一次启用yum之前首先需要导入系统的RPM-GPG-KEY： #rpm --import /usr/share/doc/centos-release-3(4)/RPM-GPG-KEY-CentOS-3(4)</p><p>yum指令 注:当第一次使用yum或yum资源库有更新时,yum会自动下载所有所需的headers放置于/var/cache/yum目录下,所需时间可能较长.</p><p>rpm包的更新 检查可更新的rpm包 #yum check-update 更新所有的rpm包 #yum update 更新指定的rpm包,如更新kernel和kernel source #yum update kernel kernel-source 大规模的版本升级,与yum update不同的是,连旧的淘汰的包也升级 #yum upgrade</p><p>rpm包的安装和删除 安装rpm包,如xmms-mp3 #yum install xmms-mp3 删除rpm包,包括与该包有倚赖性的包 #yum remove licq 注:同时会提示删除licq-gnome,licq-qt,licq-text</p><p>yum暂存(/var/cache/yum/)的相关参数 清除暂存中rpm包文件 #yum clean packages 清除暂存中rpm头文件 #yum clearn headers 清除暂存中旧的rpm头文件 #yum clean oldheaders 清除暂存中旧的rpm头文件和包文件 #yum clearn 或#yum clearn all 注:相当于yum clean packages + yum clean oldheaders</p><p>包列表 列出资源库中所有可以安装或更新的rpm包 #yum list 列出资源库中特定的可以安装或更新以及已经安装的rpm包 #yum list mozilla#yum list mozilla* 注:可以在rpm包名中使用匹配符,如列出所有以mozilla开头的rpm包 列出资源库中所有可以更新的rpm包 #yum list updates 列出已经安装的所有的rpm包 #yum list installed 列出已经安装的但是不包含在资源库中的rpm包 #yum list extras 注:通过其它网站下载安装的rpm包</p><p>rpm包信息显示(info参数同list) 列出资源库中所有可以安装或更新的rpm包的信息 #yum info 列出资源库中特定的可以安装或更新以及已经安装的rpm包的信息 #yum info mozilla#yum info mozilla* 注:可以在rpm包名中使用匹配符,如列出所有以mozilla开头的rpm包的信息 列出资源库中所有可以更新的rpm包的信息 #yum info updates 列出已经安装的所有的rpm包的信息 #yum info installed 列出已经安装的但是不包含在资源库中的rpm包的信息 #yum info extras 注:通过其它网站下载安装的rpm包的信息</p><p>搜索rpm包 搜索匹配特定字符的rpm包 #yum search mozilla 注:在rpm包名,包描述等中搜索 搜索有包含特定文件名的rpm包 #yum provides realplay</p><p>增加资源库 例如:增加rpm.livna.org作为资源库 安装Livna.org rpms GPG key #rpm --import <a href="http://rpm.livna.org/RPM-LIVNA-GPG-KEY" target="_blank" rel="noreferrer">http://rpm.livna.org/RPM-LIVNA-GPG-KEY</a> 检查GPG Key</p><h1 id="rpm-qa-gpg-pubkey" tabindex="-1">rpm -qa gpg-pubkey* <a class="header-anchor" href="#rpm-qa-gpg-pubkey" aria-label="Permalink to &quot;rpm -qa gpg-pubkey*&quot;">​</a></h1><p>显示Key信息 #rpm -qi gpg-pubkey-a109b1ec-3f6e28d5 (注:如果要删除Key,使用#rpm -e gpg-pubkey-a109b1ec-3f6e28d5)</p><p>yum常用的命令</p><h1 id="yum-install-xxx-安装xxx软件" tabindex="-1">yum install xxx 安装xxx软件 <a class="header-anchor" href="#yum-install-xxx-安装xxx软件" aria-label="Permalink to &quot;yum install xxx            安装xxx软件&quot;">​</a></h1><h1 id="yum-info-xxx-查看xxx软件的信息" tabindex="-1">yum info xxx 查看xxx软件的信息 <a class="header-anchor" href="#yum-info-xxx-查看xxx软件的信息" aria-label="Permalink to &quot;yum info xxx                查看xxx软件的信息&quot;">​</a></h1><h1 id="yum-remove-xxx-删除软件包" tabindex="-1">yum remove xxx 删除软件包 <a class="header-anchor" href="#yum-remove-xxx-删除软件包" aria-label="Permalink to &quot;yum remove xxx        删除软件包&quot;">​</a></h1><h1 id="yum-list-列出软件包" tabindex="-1">yum list 列出软件包 <a class="header-anchor" href="#yum-list-列出软件包" aria-label="Permalink to &quot;yum list                        列出软件包&quot;">​</a></h1><h1 id="yum-clean-清除缓冲和就的包" tabindex="-1">yum clean 清除缓冲和就的包 <a class="header-anchor" href="#yum-clean-清除缓冲和就的包" aria-label="Permalink to &quot;yum clean                    清除缓冲和就的包&quot;">​</a></h1><h1 id="yum-provides-xxx-以xxx为关键字搜索包-提供的信息为关键字" tabindex="-1">yum provides xxx 以xxx为关键字搜索包（提供的信息为关键字） <a class="header-anchor" href="#yum-provides-xxx-以xxx为关键字搜索包-提供的信息为关键字" aria-label="Permalink to &quot;yum provides xxx        以xxx为关键字搜索包（提供的信息为关键字）&quot;">​</a></h1><h1 id="yum-search-xxx-搜索软件包-以名字为关键字" tabindex="-1">yum search xxx 搜索软件包（以名字为关键字） <a class="header-anchor" href="#yum-search-xxx-搜索软件包-以名字为关键字" aria-label="Permalink to &quot;yum search xxx           搜索软件包（以名字为关键字）&quot;">​</a></h1><h1 id="yum-groupupdate-xxx" tabindex="-1">yum groupupdate xxx <a class="header-anchor" href="#yum-groupupdate-xxx" aria-label="Permalink to &quot;yum groupupdate xxx&quot;">​</a></h1><h1 id="yum-grouplist-xxx" tabindex="-1">yum grouplist xxx <a class="header-anchor" href="#yum-grouplist-xxx" aria-label="Permalink to &quot;yum grouplist xxx&quot;">​</a></h1><h1 id="yum-groupremove-xxx" tabindex="-1">yum groupremove xxx <a class="header-anchor" href="#yum-groupremove-xxx" aria-label="Permalink to &quot;yum groupremove xxx&quot;">​</a></h1><p>这三个都是一组为单位进行升级 列表和删除的操作。。比如 &quot;Mysql Database&quot;就是一个组会同时操作相关的所有软件包；</p><h1 id="yum-update-系统升级" tabindex="-1">yum update 系统升级 <a class="header-anchor" href="#yum-update-系统升级" aria-label="Permalink to &quot;yum update                系统升级&quot;">​</a></h1><h1 id="yum-list-available-列出所有升级源上的包" tabindex="-1">yum list available 列出所有升级源上的包； <a class="header-anchor" href="#yum-list-available-列出所有升级源上的包" aria-label="Permalink to &quot;yum list available        列出所有升级源上的包；&quot;">​</a></h1><h1 id="yum-list-updates-列出所有升级源上的可以更新包" tabindex="-1">yum list updates 列出所有升级源上的可以更新包； <a class="header-anchor" href="#yum-list-updates-列出所有升级源上的可以更新包" aria-label="Permalink to &quot;yum list updates         列出所有升级源上的可以更新包；&quot;">​</a></h1><h1 id="yum-list-installed-列出已经安装的包" tabindex="-1">yum list installed 列出已经安装的包； <a class="header-anchor" href="#yum-list-installed-列出已经安装的包" aria-label="Permalink to &quot;yum list installed         列出已经安装的包；&quot;">​</a></h1><h1 id="yun-update-kernel-升级内核" tabindex="-1">yun update kernel 升级内核； <a class="header-anchor" href="#yun-update-kernel-升级内核" aria-label="Permalink to &quot;yun update kernel       升级内核；&quot;">​</a></h1><p>yum常用的源</p><ol><li>自动选择最快的源</li></ol><p>由于yum中有的mirror速度是非常慢的，如果yum选择了这个mirror，这个时候yum就会非常慢，对此，可以下载fastestmirror插件，它会自动选择最快的mirror：</p><p>#yum install yum-fastestmirror</p><p>配置文件：（一般不用动）/etc/yum/pluginconf.d/fastestmirror.conf</p><p>你的yum镜像的速度测试记录文件：/var/cache/yum/timedhosts.txt</p><p>(2)使用图形界面的yum</p><p>如果觉得命令行的yum不方便，那么可以使用图形化的yumex，这个看起来更方便，因为可以自由地选择软件仓库：</p><p>#yum install yumex</p><p>然后在系统工具中就可以看到yum extender了。实际上系统自带的“添加/删除程序“也可以实现图形化的软件安装，但有些yumex的功能它没有。 来源：<a href="http://blog.cnr.cn/18/viewspace-8099.html" target="_blank" rel="noreferrer">小蜗牛</a></p>',40),l=[u];function p(i,o,x,s,n,y){return r(),e("div",null,l)}const c=a(t,[["render",p]]);export{h as __pageData,c as default};
